setwd("~/Documents/GitHub/UFLib_Rtraining")
setwd("~/Documents/GitHub/UFLib_Rtraining")
setwd("~/Documents/GitHub/UFLib_Rtraining")
getwd()
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
rm(z)
rm(z)
z=12
#removing variables
rm(z)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
view(x)
view(x)
view(x)
?view
?veiw
view(x)
source("~/Documents/GitHub/UFLib_Rtraining/UFLib Training.R", echo=TRUE)
x
view(x)
y <- 11:232
#subset values
x[16]
#subset values
y[16]
y[133]
y[4:7]
??view
View(x)
mynewvar <- c(1,7,9,12321, 3434)
str(mynewvar)
#string vector
stringvector <- c("Courtnet", "Sam", "car")
str(stringvector)
str(x.log)
#logical vector
x.log <- c(TRUE, FALSE, TRUE, TRUE)
str(x.log)
stringvector[2]
#sequence
seq(from=1, to=100)
1:100
seq(from=1, to =100, by =5)
#checking for datasets
data()
data("orange")
data("Orange")
view(Orange)
view("Orange")
View(Orange)
View(Orange)
View(Orange)
Orange
head(Orange)
lmHeight = lm(circumference~age, data = Orange) #Create the linear regression
View(lmHeight)
summary(lmHeight) #Review the results
tail(Orange)
str(Orange)
dim(Orange)
lmAge = lm(circumference~age, data = Orange) #Create the linear regression
summary(lmAge) #Review the results
dat.new <- data.frame()
dat.new <- data.frame()
name <- c("Ana", "Bob", "Chris")
language <- c("R", "C", "Java")
year <- c(4, 6,7)
data.frame(name, language, year)
firstdata <- data.frame(name, language, year)
data.new < data.frame (name=c("Anna", "Bob", "Chris"),
bol = c(TRUE, FALSE, TRUE),
year = c(4,6,7))
data.new <- data.frame (name=c("Anna", "Bob", "Chris"),
bol = c(TRUE, FALSE, TRUE),
year = c(4,6,7))
data.new <- data.frame (name=c("Anna", "Bob", "Chris", "Dave"),
bol = c(TRUE, FALSE, TRUE, FALSE),
year = c(4,6,7, 9))
data.new
write.csv(data.new, file = "mynewdata.csv")
write.csv(data.new, file = "mynewdata.csv", row.names = FALSE)
read.csv("mynewdata.csv")
dataReadback <- read.csv("mynewdata.csv", header = TRUE)
View(dataReadback)
dataReadback$name
dataReadback$name[3]
dataReadback[4,1]
dataReadback[4,]
dataReadback[-2,]
data.new
data.more <- data.frame (name=c("Emma", "Felicia", "George"),
bol = c(TRUE, FALSE, TRUE),
year = c(4,6,7))
#rowbind
rowbind.data <-rbind(dat.more, dat.new)
#rowbind
rowbind.data <-rbind(data.more, data.new)
colbind.data <- cbind(data.new, data.more)
mat.example <- matrix(0, ncol = 4, nrow = 8)
View(mat.example)
class(mat.example)
dim(mat.example)
rnorm(20)
mat.dataex <- rnorm(20)
#populate the matrix
mat.example1 <- matrix(mat.data, nrow= 4, ncol = 5, byrow = FALSE)
#populate the matrix
mat.example1 <- matrix(mat.dataex, nrow= 4, ncol = 5, byrow = FALSE)
View(mat.example1)
mat.example1[4,4]
list.example <- list(c("Red", "Green"), name, TRUE, mat.example1, data.new)
list.example
list.example[[1]][2]
